version: '3'

services:
  postgres-db:
    image: postgres
    container_name: postgres-db
    environment:
      - POSTGRES_PASSWORD=dev1234
      - POSTGRES_USER=postgres
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - todoinfra
  elasticsearch:
   container_name: elasticsearch
   image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
   ports:
    - 9200:9200
   volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data
   environment:
    - xpack.monitoring.enabled=true
    - xpack.watcher.enabled=false
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - discovery.type=single-node
   networks:
    - todoinfra
  kibana:
   container_name: kibana
   image: docker.elastic.co/kibana/kibana:7.9.2
   ports:
    - 5601:5601
   depends_on:
    - elasticsearch
   environment:
    - ELASTICSEARCH_URL=http://localhost:9200
   networks:
    - todoinfra
  identity-svc:
    container_name: identity-svc
    build:
      context: .
      dockerfile: ./Identity.Dockerfile
    environment: 
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ASPNETCORE_ENVIRONMENT=Docker
      - ConnectionStrings__IdentityProvider=Server=postgres-db,5432;User Id=postgres;Password=dev1234;Database=identityserver
      - ElasticConfiguration__Uri=http://elasticsearch:9200
      - ClientSecret=secret
      - ClientId=todoApp
    ports: 
      - "5000:80"
    networks:
      - todoinfra
    depends_on: 
      - postgres-db
  todo-service:
    container_name: todo-service
    build:
      context: .
      dockerfile: ./TodoList.Dockerfile
    environment: 
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ASPNETCORE_ENVIRONMENT=Docker
      - ConnectionStrings__TodoList=Server=postgres-db,5432;User Id=postgres;Password=dev1234;Database=todolist
      - IdentityServiceUrl=http://identity-svc
      - ElasticConfiguration__Uri=http://elasticsearch:9200
    ports: 
      - "7001:80"
    networks:
      - todoinfra
    depends_on: 
      - postgres-db
      - identity-svc
  gateway-svc:
    container_name: gateway-service
    build:
      context: .
      dockerfile: ./Gateway.Dockerfile
    environment: 
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ASPNETCORE_ENVIRONMENT=Docker
      - ElasticConfiguration__Uri=http://elasticsearch:9200
      - IdentityServiceUrl=http://identity-svc
      - ReverseProxy__Clusters__todocluster__Destinations__todoApi__Address=http://todo-service
      - ReverseProxy__Routes__todolist__ClusterId=todocluster
      - ReverseProxy__Routes__todolist__AuthorizationPolicy=default
      - ReverseProxy__Routes__todolist__Match__Path=/todo/{**catch-all}
      - ReverseProxy__Routes__todolist__Match__Methods=[POST,PUT,DELETE,GET]
      - ReverseProxy__Routes__todolist__Transforms__0__PathPattern=api/item/{**catch-all}
    ports: 
      - "6000:80"
    networks:
      - todoinfra
    depends_on: 
      - postgres-db
      - identity-svc
      - todo-service
networks:
  todoinfra:
    driver: bridge

volumes:
  elasticsearch-data:
  db: